pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
               git 'https://github.com/Ravali08/public-api-java.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh "mvn clean package"
                    sh "docker buildx build -t 767663789401.dkr.ecr.ap-south-1.amazonaws.com/private:Jenkins.1.0.${BUILD_NUMBER} ."
                }
            }
        }

        stage('SonarQube Analysis Stage') {
            steps{
                withSonarQubeEnv('sonar') { 
                    sh "mvn clean verify sonar:sonar -Dsonar.projectKey=demo-sonar"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                   sh "aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 767663789401.dkr.ecr.ap-south-1.amazonaws.com"
                   sh "docker push 767663789401.dkr.ecr.ap-south-1.amazonaws.com/private:Jenkins.1.0.${BUILD_NUMBER}"
                 }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                   sh "docker rm -f my-app || true"
                    sh "docker run -itd --name my-app -p 8000:8080 767663789401.dkr.ecr.ap-south-1.amazonaws.com/private:Jenkins.1.0.${BUILD_NUMBER}"
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
